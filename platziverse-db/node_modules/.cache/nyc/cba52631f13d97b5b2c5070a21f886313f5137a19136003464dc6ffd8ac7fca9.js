"use strict";var cov_1xt92f3q0z=function(){var path="/Users/franndyabreu/Desktop/Platzi-Verse/platziverse-db/lib/metric.js";var hash="0c07cfab2008e361dc6460d3c29d278344e742d8";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/franndyabreu/Desktop/Platzi-Verse/platziverse-db/lib/metric.js",statementMap:{"0":{start:{line:3,column:0},end:{line:56,column:2}},"1":{start:{line:5,column:4},end:{line:18,column:7}},"2":{start:{line:22,column:4},end:{line:39,column:7}},"3":{start:{line:42,column:18},end:{line:42,column:63}},"4":{start:{line:44,column:4},end:{line:48,column:5}},"5":{start:{line:45,column:6},end:{line:45,column:51}},"6":{start:{line:46,column:21},end:{line:46,column:53}},"7":{start:{line:47,column:6},end:{line:47,column:29}},"8":{start:{line:51,column:2},end:{line:55,column:4}}},fnMap:{"0":{name:"setupMetric",decl:{start:{line:3,column:26},end:{line:3,column:37}},loc:{start:{line:3,column:63},end:{line:56,column:1}},line:3},"1":{name:"findByAgentUuid",decl:{start:{line:4,column:17},end:{line:4,column:32}},loc:{start:{line:4,column:39},end:{line:19,column:3}},line:4},"2":{name:"findByTypeAgentUuid",decl:{start:{line:21,column:17},end:{line:21,column:36}},loc:{start:{line:21,column:49},end:{line:40,column:3}},line:21},"3":{name:"create",decl:{start:{line:41,column:17},end:{line:41,column:23}},loc:{start:{line:41,column:38},end:{line:49,column:3}},line:41}},branchMap:{"0":{loc:{start:{line:44,column:4},end:{line:48,column:5}},type:"if",locations:[{start:{line:44,column:4},end:{line:48,column:5}},{start:{line:44,column:4},end:{line:48,column:5}}],line:44}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"0c07cfab2008e361dc6460d3c29d278344e742d8"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();cov_1xt92f3q0z.s[0]++;module.exports=function setupMetric(MetricModel,AgentModel){cov_1xt92f3q0z.f[0]++;async function findByAgentUuid(uuid){cov_1xt92f3q0z.f[1]++;cov_1xt92f3q0z.s[1]++;return MetricModel.findAll({attributes:["type"],group:["type"],include:[{attributes:[],model:AgentModel,where:{uuid}}],raw:true});}async function findByTypeAgentUuid(type,uuid){cov_1xt92f3q0z.f[2]++;cov_1xt92f3q0z.s[2]++;return MetricModel.findAll({attributes:["id","type","value","createdAt"],where:{type},limit:20,order:[["createdAt","DESC"]],include:[{attributes:[],model:AgentModel,where:{uuid}}],raw:true});}async function create(uuid,metric){cov_1xt92f3q0z.f[3]++;const agent=(cov_1xt92f3q0z.s[3]++,await AgentModel.findOne({where:{uuid}}));cov_1xt92f3q0z.s[4]++;if(agent){cov_1xt92f3q0z.b[0][0]++;cov_1xt92f3q0z.s[5]++;Object.assign(metric,{agentId:agent.id});const result=(cov_1xt92f3q0z.s[6]++,await MetricModel.create(metric));cov_1xt92f3q0z.s[7]++;return result.toJSON();}else{cov_1xt92f3q0z.b[0][1]++;}}cov_1xt92f3q0z.s[8]++;return{create,findByAgentUuid,findByTypeAgentUuid};};