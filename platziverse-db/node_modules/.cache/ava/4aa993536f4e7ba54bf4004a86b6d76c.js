"use strict";

const test = require("ava");

const proxyquire = require("proxyquire");

const sinon = require("sinon");

let db = null;
let sandbox = null; //Resets the number of time a particular funciton have been called.

let config = {
  logging: function () {}
};
let MetricStub = {
  belongsTo: sinon.spy()
};
let AgentStub = null;
test.beforeEach(async () => {
  sandbox = sinon.sandbox;
  AgentStub = {
    hasMany: sandbox.spy()
  };
  const setupDB = proxyquire("../", {
    "./models/agent": () => AgentStub,
    "./models/metric": () => MetricStub
  });
  db = await setupDB(config);
});
test.afterEach(() => {
  sandbox && sinon.sandbox.restore();
});
test("Agent", t => {
  t.truthy(db.Agent, "Agent service should exist", console.log(AgentStub));
});
test.serial("Setup", t => {
  t.true(AgentStub.hasMany.called, "AgentMode.hasMany was executed");
  t.true(MetricStub.belongsTo.called, "MetricStub.belongsTo was executed");
});
//# sourceMappingURL=/Users/franndyabreu/Desktop/Platzi-Verse/platziverse-db/node_modules/.cache/ava/4aa993536f4e7ba54bf4004a86b6d76c.js.map