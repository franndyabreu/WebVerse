"use strict";

const test = require("ava");

const proxyquire = require("proxyquire");

const sinon = require("sinon");

let sandbox = null;
let db = null;
let uuidArgs = "xxx";

const metricFixtures = require("./fixtures/metric");

let config = {
  logging: function () {}
};
let metricStub = null;
const singleMetric = Object.assign({}, metricFixtures.single);
const newMetric = {
  id: 30,
  type: "memory",
  value: 300,
  uuid: "TTT-TTT-TTT"
};
test.beforeEach(async () => {
  sandbox = sinon.createSandbox();
  metricStub = {
    belongsTo: sinon.spy()
  };
  metricStub.findByAgentUuid = sandbox.stub();
  metricStub.findByAgentUuid.withArgs(uuidArgs).returns(Promise.resolve(metricFixtures.findByTypeAgentUuid(singleMetric)));
  const setupDB = proxyquire("../", {
    "./models/metric": () => metricStub
  });
  db = await setupDB(config);
});
test.afterEach(() => {
  sinon.restore();
});
test("Metric", t => {
  t.truthy(db.Metric, "Agent service should exist");
}); // test.serial("Metric#findByAgentUuid", async t => {
//   t.true(metricStub.findByAgentUuid.called, "FindByAgentUuid should be called");
// });
//# sourceMappingURL=/Users/franndyabreu/Desktop/Platzi-Verse/platziverse-db/node_modules/.cache/ava/1281edee693997c6e520898cf9df21cb.js.map